#1281
#include <bits/stdc++.h>
using namespace std;
int x[10], n, used[15];
void afisare()
{
  for(int i=1; i<=n; i++)
		{for(int j=1; j<=n; j++)
        if(j==x[i]) 
			cout<<'*'<<" ";
       else cout<<'_'<<" ";
        cout<<endl;
      }
        
}
bool valid (int k)
{
  for(int i=1; i<k; i++)
    if(x[k]==x[i] || abs(x[i]-x[k])==k-i)
      return false;
  return true;
}
void Back(int k)
{
  if(k==n+1)
  {
    afisare ();
    exit (0);
  }
  for(int i=1; i<=n; i++)
    if(!used[i])
    {
      used[i]=1;
      x[k]=i;
      if(valid(k))
			 Back(k+1);
      used[i]=0;
    }
    
}
/*
atac pe linie x[k]=x[i], i<k
atac pe diagonala, exista x[i], i<k a.i. k-i=|x[i]-x[k]|
	*/
	int main()
{
    cin>>n;
    Back(1);
    return 0;
}







#342
#include <bits/stdc++.h>
using namespace std;
ifstream fin("soarece.in");
ofstream fout("soarece.out");
int a[12][12], n, m, is, js, ib, jb, cnt;
void citire()
{
  fin>>n>>m;
  for(int i=1; i<=n; i++)
    for(int j=1; j<=m; j++)
      fin>>a[i][j];
  fin>>is>>js>>ib>>jb;
	//bordarea liniei 0 si liniei n+1 cu val de 1,col 0 si col m+1 cu val 1
	for(int j=0; j<=m+1; j++)
    a[0][j]=a[n+1][j]=1;
  for(int i=0; i<=n+1; i++)
    a[i][0]=a[i][m+1]=1;
	
}
void Back(int l, int c)
{
  if(l==ib && c==jb)
    cnt++;
  else
  {
    a[l][c]=2;
    if(a[l-1][c]==0)
      Back(l-1, c);//nord
		if(a[l][c+1]==0)
      Back(l, c+1);
    if(a[l+1][c]==0)
      Back(l+1, c);
    if(a[l][c-1]==0)
      Back(l, c-1);
		a[l][c]=0;
  }
}

	int main()
{
    citire();
    Back(is,js);
    fout<<cnt;
    return 0;
}






#837
#include <bits/stdc++.h>
using namespace std;
ifstream fin("fill.in");
ofstream fout("fill.out");
int a[102][102], n, m;

void citire()
{
  fin>>n>>m;
  for(int i=1; i<=n; i++)
    for(int j=1; j<=m; j++)
      fin>>a[i][j];
}
void Fill(int x,int y)
{
	if(a[x][y]==0)return ;
  a[x][y]=0;
  Fill(x-1, y);
  Fill(x, y+1);
  Fill(x+1, y);
  Fill(x, y-1);
    
}
int cnt_cont()
{int nr=0;
	for(int i=1; i<=n; i++)
    for(int j=1; j<=m; j++)
        if(a[i][j]==1)
        {
          nr++;
          Fill(i, j);
        }
  return nr;
  
	
}

	int main()
{
   citire();
  fout<<cnt_cont();
    return 0;
}







TEMA: 343;