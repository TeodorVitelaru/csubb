#2640
#include<iostream>
using namespace std;
int isdelim(char delim[],char c)
{for(int j=0;delim[j];j++)
        if(c==delim[j]) return 1;
  return 0;    
}
int extrageCuvant (char dest[], char sursa[], char delim[], int n)
{ int i=0,j,k=0,start,nrcuv=-1,ok;
 while(sursa[i] && isdelim(delim,sursa[i]) )//textul poate incepe cu delimitatori
    i++;
  start=i;//!!!!!
  while(sursa[i]!=0 && nrcuv<n-1)
        { 
            while(!isdelim(delim,sursa[i]) && sursa[i])
                 i++;//deplasare peste literele cuvantului
            nrcuv++;
            while(sursa[i] && isdelim(delim,sursa[i]))
             i++;
      start=i;
      }
    if(sursa[i]==0)return 0;
    if(nrcuv==n-1)//copiem cuvantul in dest
    {for(i=start;!isdelim(delim,sursa[i]) && sursa[i] ;i++)
      dest[k++]=sursa[i];
      dest[k]=0;
      return 1;
  }
 return 0;
}


#845
#include<iostream>
#include<cstring>
using namespace std;
int a[1026][1026];
void generare(int lsus, int csus, int ljos, int cjos)
{
  if(ljos==lsus+1 && cjos==csus+1)
  {a[lsus][csus]=1; return;}
  else
  {
    int lm=(lsus+ljos)/2, cm=(cjos+csus)/2;
    for(int i=lsus; i<=lm; i++)
      for(int j=csus; j<=cm; j++)
        a[i][j]=1;
    generare(lsus, cm+1, lm, cjos);
    generare(lm+1, csus, ljos, cm);
    generare(lm+1, cm+1, ljos, cjos);
    
  }
}

int main()
{
	int n,ljos,cjos;
	cin>>n;
	ljos=cjos=(1<<n);
	generare(1,1, ljos, cjos);
  for(int i=1; i<=ljos; i++)
    {
      for(int j=1; j<=cjos; j++)
        cout<<a[i][j]<<" ";
      cout<<endl;
    }
  return 0;
}