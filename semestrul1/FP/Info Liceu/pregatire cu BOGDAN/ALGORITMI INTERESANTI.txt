=====================
INMULTIREA A LA RUSSE
=====================
R ← 0
┌ cattimp a ≠ 0 executa
│   ┌ daca a este impar atunci
│   │   R ← R + b
│   └■
│   a ← [a / 2]
│   b ← b * 2
└■
scrie R



==========================
RIDICAREA LA PUTERE RAPIDA
==========================
citeste A,n (baza, exponent)
P ← 1
┌ cattimp n ≠ 0 executa
│   c ← n % 2
│   ┌ daca c = 1 atunci
│   │   P ← P * A
│   └■
│   n ← [n / 2]
│   A ← A * A
└■
scrie P



================
OPERATII PE BITI
================
1. "&"- compara biti de pe fiecare numar si returneaza valoarea obtinuta
2. n << k == n * 2^k
3. n >> k == n / 2^k





==============================
DESCOMPUNEREA IN FACTORI PRIMI
==============================
1.
#include <iostream>
using namespace std;
int main() 
{
  int n;
  cin >> n;
  for(int i=2; i<=n; i++)
    {
      int p=0;
        while(n%i==0)
          {
            p++;
            n=n/i;
          }
      if(p!=0)
        cout<<i<<" "<<p<<endl;   
    }
	if(n!=1)
		cout<<n<<" 1"; 
  return 0;
}

2.
APLICATII ALE DESCOMPUNERII IN FACTORI PRIMI
n=f1^p1 * f2^p2....* fk^pk
d=f1^e1 * f2^e2....* fk^ek, d divizor al lui n
ei este in {0,1,...pi}
(e1,e2...ek)
"cate numere de 3 cifre se pot construi cu cifra unitatilor impara, cifra zecilor para"
xyz: 9 x 5 x 5 numere 

nrdiv(n)=(p1+1)*(p2+1)...*(pk+1)

nrdiv(n) impar--->pi+1 impar--->pi par
--->n este patrat perfect

nrdiv(n) impar  <--> n este patrat perfect
nrdiv(n)=3 <---> n este patratul perfect al unui numar prim



==========================
CEL MAI MARE DIVIZOR COMUN
==========================
-prin scaderi
if(x*y)
{
while(x!=y)
   if(x>y)
     x=x-y;
   else
     y=y-x;
d=x;
}
else
 if(x==0) d=y;
 else d=x;
cout<<"cmmdc"<<d;
-------------------------
-prin impartiri
while(b)
{ rest=a%b;
  a=b;
  b=rest;  
}
cout<<"cmmdc="<<a;


int cmmdc(int a,int b)
{ if(b==0) return a;
else return cmmdc(b,a%b);
}


===============
COADA CIRCULARA
===============
v=-9 11 7 -19 2
x=14 v=14 11 7 -19 2
x=5 v=14 5 7 -19 2
COADA- FIFO- First In First Out--se prelucreaza elem de la inceputul cozii si adaugarea se face dupa ultimul element
cin>>k;
int v[k];
for(int i=0;i<k;i++)
 {f>>v[i];s+=v[i];}
prim=0;ultim=k-1;
smax=s;
for(i=k;i<n;i++)
{  f>>x;
   s=s+x-v[prim];
   if(s>smax) smax=s;
   ultim=(ultim+1)%k;
    v[ultim]=x;
   prim=(prim+1)%k;
 }
cout<<smax;



---------------------
d=2;
while(x>1)
{ p=0;
  while(x%d==0) x/=d,p++;
  !!! prod=prod*(p+1);
  d++;
}  nr de divizori al numarului n
-----------------------
d=2;
while(x>1)
{ p=0;p1=1
  while(x%d==0) x/=d,p++,p1=p1*d;
  !!! prod=prod*(p1*d-1)/(d-1);
  d++;
}  suma divizorilor numarului n


======================
d=2;produs=n;
while(x>1)
{ p=0;
  while(x%d==0) x/=d,p++;
  if(p) produs=produs*(d-1)/d;
  d++;
}  INDICATORUL LUI EULER=nr de numere <=n , prime cu n
-----------------------------


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#include <cmath>
#include <iomanip>
#include <iostream>
using namespace std;

int main() {
  int n, a=1, b1=1, c=1;
  cin>>n;
  int cop=n, d=2, prod=n;
  while(cop > 1)
    {
      int p=0, aux=d;
      while(cop%d==0)
        {p++; cop/=d; aux*=d;}
      if(p)
      {
        a*=p+1;
        b1*=(d-1);
        prod=prod*(d-1)/d;
        c*=(aux-1);
      }
      d++;
      if(d*d>cop)
        d=cop;
    }
  cout<<a<<" "<<prod<<" "<<c/b1;
// a--nr div 
// prod--indicatorul lui Euler
// c--suma div
  return 0;
}

