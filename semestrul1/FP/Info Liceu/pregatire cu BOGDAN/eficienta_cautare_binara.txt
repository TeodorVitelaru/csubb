(15,3)-->5
(16,3)-->6


B,C,D
(7,2)-->4
C,D
(a/b)=a div b+1


(a-1) div b +1
--------------
------------------
st+1<dr

(1,7)
(1,4)
(1,2)
v=1 2 3 4 6 8
a=0
a=10

5 6 4431 2 3
2902
----------------
int nrvoc(char s[])
{..
}
int main()
{ minn=256;
...
for(int i=1;i<=n;i++)
{ cin.getline(s,256);
  nr=nrvoc(s);
  if(nr<=minn)
  { minn=nr; strcpy(smax,s);}
}
cout<<smax;
-----
pag 183/2009

fstream f("text.in");
    ofstream c("text.out");
    char s[200],*p,*q,voc[]="aeiou";
    int rand, coloana;
    while(f.getline(s, 200)){
        for(int i = 0; i<strlen(s)-1; ++i)
        {  p=strchr(voc,s[i]);
           q=strchr(voc,s[i+1]);
            if(p && q){
                rand=p-voc+1;
                coloana=q-voc+1;
                frec[rand][coloana]++;
            }
    }
    int maxi=-1, maxi2=-1, rand2, coloana2;
       for(int i = 1; i<=5; ++i){
        for(int j=1; j<=5; ++j)
            cout << frec[i][j];
        cout << endl;
       }
    for(int i = 1; i<=5; ++i)
        for(int j=1; j<=5; ++j)
            if(maxi<frec[i][j]){
                maxi=frec[i][j];
                rand=i;
                coloana=j;

            }
    c << " " << voc[rand-1] << " " << voc[coloana-1];
    return 0;
}

COMPLEXITATEA
O(1)--formula

Se da S numar natural. Sa se determine 3 numere naturale cu prop a+b+c=S si produsul este maxim
Inegalitatea mediilor
media geometrica<=media aritmetica
media geometrica=media aritmetica  <-->a1,a2...an sunt egale
S=12-->4,4,4, S=13--->4,4,5, S=14--->4,5,5
cin>>S;
a=b=c=S/3;
if(S%3==1)
  c++;
if(S%3==2)
{b++;c++;}
cout<<a<<" "<<b<<" "<<c;
----------------------
SAU
Se dau a,b,c. Sa se determine cate numere multiple de c sunt in [a,b]
[a,b]=[1,b]-[1,a-1]
nr=b/c -(a-1)/c;
cout<<nr;
-----------------------
SAU
Se da sirul 1,1,2,1,2,3,1,2,3,4.... si o pozitie n. Sa se determine EFICIENT valoarea din sir de pe pozitia n

Solutia 1-- O(sqrt(n))
val:1   1 2   1 2 3  1 2 3 4         1 2 3 4 5  ...
poz:1     3       6        10          n=12  15
cin>>n;
poz=0;k=0;
while(poz<n)
{ k++;
  poz=poz+k;
}
//in secventa k este pozitia n
cout<<n-(k-1)*k/2;
//n===k(k+1)/2--->k===sqrt(2n)

SOLUTIA 2--O(1)
n===k(k+1)/2--->k^2+k-2n=0, delta=1+8n, 

k=[(-1+sqrt(delta))/2] daca delta este patrat perfect
k=[(-1+sqrt(delta))/2] + 1, altfel
ex n=10 k=4
   n=9  k trebuie ajustat!!
--------------------
while(n)
  n/=2;
Fie x nr de iteratii-->n===2^x--->x=log(n)
--->O(log(n))

Cautare a unei valori in sir ordonat-->O(log(n)), corect O(n+log(n)) datorita citirlor in vector
Interclasarea a 2 vectori-->O(n+m)


CATEGORII DE PROBLEME
1.Cautare binara in sir ordonat 
2. Interclasare
3. Secvente-->O(n)
4. Vectori de frecventa(restrictii pentru NUMERE MICI)-->O(n)
5. Formule
6.Siruri recurente(Fibonacci)
   fn=fn-1 +2*fn-2, f1=1,f2=2;
7. Euristice


CAUTARE BINARA
VARIANTA 24/2009
Fişierul text bac.txt conţine pe prima linie numărul natural n, 1≤n≤30000, pe următoarele
n linii un şir de n numere întregi, ordonate crescător, iar pe ultima linie două numere întregi
a şi b (a≤b) separate de un spaţiu. Fiecare dintre cele n numere, precum şi valorile a şi b,
au cel mult patru cifre.
a) Scrieţi un program C/C++, eficient din punct de vedere al timpului de executare, care
afişează pe ecran cel mai mic număr întreg din intervalul închis [a,b] care se găseşte în
şirul dat. Dacă nu există un astfel de număr, programul afişează textul NU.
 4.
Exemplu: dacă fişierul bac.txt are conţinutul alăturat, programul afişează
valoarea 11 (6p.)
b) Descrieţi în limbaj natural metoda utilizată şi explicaţi în ce constă eficienţa
ei. (4p.)
4
-2
7
11
35
8 15 

BRUT-- O(n)
fin>>n;
for(i=1;i<=n;i++)
 fin>>v[i];
fin>>a>>b;
for(i=1;i<=n;i++)
 if(v[i]>=a && v[i]<=b) {cout<<v[i];return 0;}
cout<<"NU exista";

OPTIM--O(n+log(n))
caut in vect v valoarea a
st=1;dr=n;
while(st<=dr)
{ mij=(st+dr)/2;
  if(a==v[mij])
  {cout<<a;return 0;}
  else
  if(a<v[mij])
    dr=mij-1;
  else
    st=mij+1;
}
if(v[st]<=b)
 cout<<v[st];
else cout<<" nu exista";

-2 7 11 35
a=8
st dr mij  a?v[mij]
1  4  2    8>7
3     3    8<11
   2

La final st=3  dr=2, v[st]>a si v[dr]<a

TEMA- Eficienta


0. simulare 2015- prob III.4, (https://www.pbinfo.ro/resurse/9dc152/examene/2015-simulare-bac/E_d_informatica_C_sp_MI_2015_var_simulare_LRO.pdf)
1. variante 2009 -https://profs.info.uaic.ro/~vcosmin/pagini/resurse_pregatire/variante-bac-2009-informatica-intensiv.pdf  
pag.180, prob 3, pag.219 prob 2

2.variante 2007-http://www.ududec.com/wp-content/uploads/2013/09/0.-Subiecte-bacalaureat-2007-E_informatica_C.pdf
VARIANTA 9 III.3, VARIANTA 14 III.2,pag 38 iii.2
 pag 42 iii.2,  pag 46 iii.1, pag 54 iii.3, pag 56 iii.1, pag 60 iii.3,pag 70 iii.1,pag 75 iii 1,pag 79 iii 3

3. ADMITERE CLUJ -IULIE 2022












