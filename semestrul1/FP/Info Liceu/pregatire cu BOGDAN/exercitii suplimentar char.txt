#1346 problema pbinfo
#include <iostream>
#include <cstring>
#include <fstream>

using namespace std;
ifstream fin ("pbinfo.in");
ofstream fout("pbinfo.out");

int main()
{
   char s[101];
   fin.getline(s, 101);
   int n;
   fin>>n;
   char m[21][100]={" ", "virus"};
   int ind=1;
   char cuv[101];
   for(int i=1; i<=n; ++i)
   {
       fin>>cuv;
       strcpy(m[++ind], cuv);
   }
   bool gasit=false;
   for(int i=1; i<=ind; i++)
   {
       if(strstr(s, m[i]))
        gasit=true;
   }
   if(gasit)
    fout<<"DA";
   else
    fout<<"NU";



    return 0;
}

==================================================

#1454 permutari cuvant
#include <iostream>
#include <cstring>
#include <fstream>

using namespace std;
ifstream fin ("permutarecuvant.in");
ofstream fout("permutarecuvant.out");

int main()
{
   char a[41];
   fin>>a;
   char t[41];
   int lung=strlen(a);
   strcpy(t, a);
   strcat(a, t);
   for(int i=0; i<lung; ++i)
   {
       for(int j=i; j<i+lung; ++j)
        fout<<a[j];
       fout<<" ";
   }



    return 0;
}

==========================================================


#1600 problema cu subiect, predicat, complement
#include <iostream>
#include <cstring>
#include <fstream>

using namespace std;
ifstream fin ("s_p_c_2.in");
ofstream fout("s_p_c_2.out");

int main()
{
   char a[15000];
   fin.getline(a, 15000);
   char s[101][41], p[101][41], c[101][41];
   int inds=0, indp=0, indc=0;
   char *p1=strtok(a, " ");
   while(p1)
   {
       if(p1[0]=='S')
        strcpy(s[++inds], p1+2);
       else
        if(p1[0]=='P')
         strcpy(p[++indp], p1+2);
       else
        if(p1[0]=='C')
         strcpy(c[++indc], p1+2);
       p1=strtok(NULL, " ");
   }
   for(int i=1; i<inds; ++i)
    for(int j=i+1; j<=inds; ++j)
      if(strcmp(s[i], s[j])>0)
        swap(s[i], s[j]);

    for(int i=1; i<indp; ++i)
     for(int j=i+1; j<=indp; ++j)
      if(strcmp(p[i], p[j])>0)
        swap(p[i], p[j]);

    for(int i=1; i<indc; ++i)
      for(int j=i+1; j<=indc; ++j)
        if(strcmp(c[i], c[j])>0)
           swap(c[i], c[j]);

    for(int i=1; i<=inds; ++i)
     for(int j=1; j<=indp; ++j)
       for(int k=1; k<=indc; ++k)
         fout<<s[i]<<" "<<p[j]<<" "<<c[k]<<'\n';



    return 0;
}
