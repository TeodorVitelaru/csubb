#include <stdio.h>
#include <stdlib.h>

#define MAX_LEN 1000

int main(int argc, char **argv)
{	
	if(argc==1)
	{
	printf("Trb sa dai un nume de fisier");
	exit(EXIT_FAILURE);
	}
	
        //deschid fisier
        char fisier[]="cuvinte.txt";
        FILE *fd=fopen(argv[1], "r");
        if (fd == NULL)
        {
                perror("fopen()");
                exit(EXIT_FAILURE);
        }

        //citesc fisier
	char buf[MAX_LEN];
	fread(buf, sizeof(char), MAX_LEN-1, fd);
	printf("%s\n", buf);

	//inchid fisier
	fclose(fd);
}


















#include<stdio.h>
#include<stdlib.h>

int main()
{
	int n =0;
	printf("n = ");
	scanf("%d", &n);
	//int numere[n];

	//alocare dinamic
	int *numere = (int*)malloc(n*sizeof(int));

	for(int i=0; i<n; i++)
	{
		printf("Numere [%d]", i);
		scanf("%d", &numere[i]);
	}
	int min = numere[0], max = numere[0], suma = numere[0];
	for(int i=1; i<n; i++)
	{	
		if(numere[i] < min)
			min = numere[i];
		if(numere[i] > max)
			max = numere[i];
		suma += numere[i];	
	}
	printf("MIN = %d, MAX = %d, MEDIA = %f\n", min, max, sum*1.00/n);

	//eliberare spatiu de stocare
	free(numere);
	return 0;
}








#include<stdio.h>
#include<stdlib.h>

void sortare(char cuvinte[][10], int n)
{
	for(int i = 0; i<n-1; i++)
		for(int j = i+1; j<n; j++)
			if(strcmp(cuvinte[i], cuvinte[j]) > 0)
				char tmp[11];
				strcpy(tmp, cuvinte[i]);
				strcpy(cuvinte[i], cuvinte[j]);
				strcpy(cuvinte[j], tmp);
}

int main()
{	
	int n = 0;
	printf(" n = ");
	scanf("%d", &n);
	char cuvinte[n][11];
	for(int i = 0; i<n; i++)
	{	
		printf("cuvinte[%d] = ", i);
		scanf("%s", cuvinte[i]);
	}
	sortare(cuvinte, n);
	for(int i = 0; i<n; i++)
		printf("%s", cuvinte[i]);

	return 0;
}



