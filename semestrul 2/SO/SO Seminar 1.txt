POSIX ERE
=========
. -- orice caracter -- 
\ -- escape
Fiecare caacter are doua forme
[abc] -- orice catacter(doar unul) din cele enumerate
[a-z] -- orice caracter intre a si z
[ab-] --
[^a-z] -- orice caracter, altul decat cele enumerate

^ -- inceput de linie
$ -- sfarsit de linie
\< -- inceput de cuvant
\> -- sfarsit de cuvant
() -- grupeaza o expresie

* -- expreia precedenta de 0 sau mai multe ori
+ -- acelasi lucuu ..      1 sau mai multe ori
? -- acelasi lucuu ..      0 sau 1 ori
{m,n} --                   cel putin de m ori sau cel mult de n ori
{,n} --
{m,} -- 
{m} --
| -- ori logic

.* -- orice sir de caractere
.+ -- orice sir care are cel putin un caracter
.{0,}
.{1,} -- multiplicator
[a-zA-Z02468] -- orice litera mare sau mica sau nr par




PROGRAME
========
grap
sed
awk



====
GREP
====
grep -E -- foloseste expresii regulare extinse
grep -E "regx" fisier -- afiseaza din fisier liniile care se potrivesc cu expresia regulata
-i -- case insensitive
-v -- returneaza liniile care NU se potrivesc
-q -- nu afiseaza nimic


1.Afiseaza din fisier liniire care contin numele dan!
grep -E "dan" /etc/paswd
grep -E -i "dan" /etc/pswd -- case insensitive
grep -E "[Dd]an" /etc/pswd -- daca incepe cu d sau D
-- astea afiseaza chiar daca numele este daniel
grep -E -i "\<dan\>" -- afiseaza dar Dan, indiferent daca sunt litere mici sau mari


LINIE DE COD DIN /etc/paswd
username:parola:user-id:group-id:user-info:home-dir:shell


2.Gasiti utilzatorul dan din /etc/paswd
grep -E -i "^dan:"

3.UTilizatorii care nu au cifre in username
grep -E -i "^[^0-9]+:"

4.username care contine macar doua vocale
"^.*[aeiou].*[aeiou].*:" -- gresit
"^[^:]*[aeiou][^:]*[aeiou]"
"^([^:]*[aeiou]){2,}"

5.consideram un fisier din care afisam toate liniile nevide
Expresia reguara: "."
grep -E "." a.txt
grep -E -v "."
	   "^$" -- linie goala

6.Toate liniile de lungime impara din fisier
grep -E "(.{2})+"
"^(
..)*.$"





===
SEP
===
-search/replace
- doar prima linie ce contine expresia este inlocuita
linia de cod: sed -E "cmd;cmd;cmd" a.txt
cmd:  s(se foloseste ca separator ex: ,@)/search/replace/ g sau i
g -- peste tot pe linie
i -- case insensitive

1. Toate vocalele cu spatii
sed -E "s/[aeiou]/(spatiu)/gi" a.txt

2.Dublare toate vocalalele 
- fiecare expreise grupata in paranteze rotunda se retine si poate fi apelata prin \1,2,3...
sed -E "s/(aeiou)/\1\1/gi"






===
AWK
===
-excel in linie de comanda
selector {
    cod -- oarecum C
}
.
.
selector poate fi si BEGIN sau END


==================
VARIABIEL SPECIALE
==================
nr -- numarul liniei curente
nf -- nr de campuri de pe linia curenta
$0 -- continutul liniei curente
$1, $2.. --- campul 1, 2.. de pe linia curenta


1.Toate numele de utilizatori din /etc/paswd
awk -F: '{print $1}' /etc/paswd

a.awk     awk -f a.awk -- de unde isi ia programul
{
  print $1
}

2.Toti utilizatorii al carui user-id este impar
$3%2==1{
print $1
}

3. Suma tuturor user-id urilor
BEGIN{
sum=0
}
{
suma=sum+$3
}
END{
print sum
}











