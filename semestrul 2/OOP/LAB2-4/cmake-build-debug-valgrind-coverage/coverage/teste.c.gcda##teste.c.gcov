        -:    0:Source:/mnt/c/Users/Admin/CLionProjects/LAB2-4/teste.c
        -:    0:Graph:/mnt/c/Users/Admin/CLionProjects/LAB2-4/cmake-build-debug-valgrind-coverage/CMakeFiles/LAB2_4.dir/teste.c.gcno
        -:    0:Data:/mnt/c/Users/Admin/CLionProjects/LAB2-4/cmake-build-debug-valgrind-coverage/CMakeFiles/LAB2_4.dir/teste.c.gcda
        -:    0:Runs:1
        -:    1:#include "domain.h"
        -:    2:#include "teste.h"
        -:    3:#include <assert.h>
        -:    4:#include <string.h>
        -:    5:#include <stdio.h>
        -:    6:#include <stdlib.h>
        -:    7:#include "ui.h"
        -:    8:
function test_all called 1 returned 100% blocks executed 100%
        1:    9:void test_all()
        -:   10:{
        1:   11:    testCreareOferta();
        1:   11-block  0
call    0 returned 1
        1:   12:    testDistrugeOferta();
call    0 returned 1
        1:   13:    testValidareOferta();
call    0 returned 1
        1:   14:    testCreareLista();
call    0 returned 1
        1:   15:    testDistrugeLista();
call    0 returned 1
        -:   16:
        -:   17:
        1:   18:    testAdauga();
call    0 returned 1
        -:   19:
        1:   20:    testSterge();
call    0 returned 1
        1:   21:     testModifica();
call    0 returned 1
        1:   22:      testOrdoneaza_pret();
call    0 returned 1
        1:   23:      testOrdoneaza_destinatie();
call    0 returned 1
        1:   24:      testFiltreaza_tip_dest();
call    0 returned 1
        1:   25:    testFiltreaza_pret();
call    0 returned 1
        -:   26:
        -:   27:
        1:   28:    printf("SUCCES TESTE\n");
call    0 returned 1
        1:   29:}
        -:   30:
function testCreareOferta called 1 returned 100% blocks executed 69%
        1:   31:void testCreareOferta()
        -:   32:{
        1:   33:    oferta* of = creareOferta("mare", "Alba", "2021/01/02", 123);
        1:   33-block  0
call    0 returned 1
       1*:   34:    assert(strcmp(of->tip, "mare") == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   34-block  0
call    2 never executed
       1*:   35:    assert(strcmp(of->destinatie, "Alba") == 0);
        1:   35-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   35-block  1
call    2 never executed
       1*:   36:    assert(of->pret == 123);
        1:   36-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   36-block  1
call    2 never executed
        1:   37:    distruge_oferta(of);
        1:   37-block  0
call    0 returned 1
        1:   38:    oferta* of2 = creareOferta("gresit", "gresit", "2021/02/02", 123);
call    0 returned 1
       1*:   39:    assert(of2->pret == -1);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   39-block  0
call    2 never executed
        1:   40:    distruge_oferta(of2);
        1:   40-block  0
call    0 returned 1
        1:   41:}
        -:   42:
function testDistrugeOferta called 1 returned 100% blocks executed 71%
        1:   43:void testDistrugeOferta()
        -:   44:{
        1:   45:    oferta* of = creareOferta("mare", "Alba", "2021/01/02", 123);
        1:   45-block  0
call    0 returned 1
       1*:   46:    assert(strcmp(of->tip, "mare") == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   46-block  0
call    2 never executed
       1*:   47:    assert(strcmp(of->destinatie, "Alba") == 0);
        1:   47-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   47-block  1
call    2 never executed
        1:   48:    distruge_oferta(of);
        1:   48-block  0
call    0 returned 1
        1:   49:}
        -:   50:
function testValidareOferta called 1 returned 100% blocks executed 69%
        1:   51:void testValidareOferta()
        -:   52:{
       1*:   53:    assert(validareOferta("mare", "alba", "2021/01/01", 123) == 1);
        1:   53-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   53-block  1
call    3 never executed
       1*:   54:    assert(validareOferta("gresit", "alba", "2021/01/01", 123) == 0);
        1:   54-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   54-block  1
call    3 never executed
       1*:   55:    assert(validareOferta("munte", "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "2021/01/01", 123) == 0);
        1:   55-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   55-block  1
call    3 never executed
       1*:   56:    assert(validareOferta("city break", "alba", "2021/01/01", 100000) == 0);
        1:   56-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   56-block  1
call    3 never executed
       1*:   57:    assert(validareOferta("gresit", "alba", "2021/01/01", -10) == 0);
        1:   57-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   57-block  1
call    3 never executed
        1:   58:}
        -:   59:
function testCreareLista called 1 returned 100% blocks executed 70%
        1:   60:void testCreareLista()
        -:   61:{
        1:   62:    ListaMea test_lista = creareLista();
        1:   62-block  0
call    0 returned 1
       1*:   63:    assert(test_lista.lg == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   63-block  0
call    2 never executed
       1*:   64:    assert(lungime(&test_lista) == 0);
        1:   64-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   64-block  1
call    3 never executed
        1:   65:    distrugeLista(&test_lista);
        1:   65-block  0
call    0 returned 1
       1*:   66:    assert(test_lista.lg == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   66-block  0
call    2 never executed
        -:   67:
        1:   68:}
        -:   69:
function testDistrugeLista called 1 returned 100% blocks executed 78%
        1:   70:void testDistrugeLista()
        -:   71:{
        1:   72:    ListaMea test_lista1 = creareLista();
        1:   72-block  0
call    0 returned 1
       1*:   73:    assert(test_lista1.lg == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   73-block  0
call    2 never executed
        1:   74:    adaugaSf(&test_lista1, creareOferta("munte", "alba", "2021/01/01", 123));
        1:   74-block  0
call    0 returned 1
call    1 returned 1
       1*:   75:    assert(test_lista1.lg == 1);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   75-block  0
call    2 never executed
        1:   76:    distrugeLista(&test_lista1);
        1:   76-block  0
call    0 returned 1
        1:   77:}
        -:   78:
function testLungime called 0 returned 0% blocks executed 0%
    #####:   79:void testLungime()
        -:   80:{
    #####:   81:    ListaMea lista = creareLista();
    %%%%%:   81-block  0
call    0 never executed
    #####:   82:    assert(lungime(&lista) == 0);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   82-block  0
call    3 never executed
    #####:   83:    oferta* of = creareOferta("munte", "alba", "2021/01/01", 123);
    %%%%%:   83-block  0
call    0 never executed
    #####:   84:    adaugaSf(&lista, of);
call    0 never executed
    #####:   85:    assert(lungime(&lista) == 1);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   85-block  0
call    3 never executed
    #####:   86:    stergere(&lista, 0);
    %%%%%:   86-block  0
call    0 never executed
    #####:   87:    assert(lungime(&lista) == 0);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   87-block  0
call    3 never executed
    #####:   88:    distrugeLista(&lista);
    %%%%%:   88-block  0
call    0 never executed
    #####:   89:}
        -:   90:
function testAdauga called 1 returned 100% blocks executed 81%
        1:   91:void testAdauga()
        -:   92:{
        1:   93:    ListaMea lista = creareLista();
        1:   93-block  0
call    0 returned 1
       1*:   94:    assert(lungime(&lista) == 0);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   94-block  0
call    3 never executed
        1:   95:    adaugaSf(&lista, creareOferta("munte", "alba", "2021/01/01", 123));
        1:   95-block  0
call    0 returned 1
call    1 returned 1
       1*:   96:    assert(lungime(&lista) == 1);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   96-block  0
call    3 never executed
        1:   97:    adaugaSf(&lista, creareOferta("mare", "cluj", "2021/01/01", 1000));
        1:   97-block  0
call    0 returned 1
call    1 returned 1
       1*:   98:    assert(lungime(&lista) == 2);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   98-block  0
call    3 never executed
        1:   99:    adaugaSf(&lista, creareOferta("city break", "alba", "2021/01/01", 650));
        1:   99-block  0
call    0 returned 1
call    1 returned 1
       1*:  100:    assert(lungime(&lista) == 3);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  100-block  0
call    3 never executed
        1:  101:    distrugeLista(&lista);
        1:  101-block  0
call    0 returned 1
        1:  102:}
        -:  103:
function testSterge called 1 returned 100% blocks executed 74%
        1:  104:void testSterge()
        -:  105:{
        1:  106:    ListaMea lista = creareLista();
        1:  106-block  0
call    0 returned 1
       1*:  107:    assert(lungime(&lista) == 0);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  107-block  0
call    3 never executed
        1:  108:    adaugaSf(&lista, creareOferta("munte", "alba", "2021/01/01", 123));
        1:  108-block  0
call    0 returned 1
call    1 returned 1
       1*:  109:    assert(lungime(&lista) == 1);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  109-block  0
call    3 never executed
        1:  110:    stergere(&lista, 0);
        1:  110-block  0
call    0 returned 1
       1*:  111:    assert(lungime(&lista) == 0);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  111-block  0
call    3 never executed
        1:  112:    adaugaSf(&lista, creareOferta("mare", "cluj", "2021/01/01", 1450));
        1:  112-block  0
call    0 returned 1
call    1 returned 1
        1:  113:    adaugaSf(&lista, creareOferta("munte", "alba", "2021/01/01", 123));
call    0 returned 1
call    1 returned 1
       1*:  114:    assert(lungime(&lista) == 2);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  114-block  0
call    3 never executed
       1*:  115:    assert(strcmp(lista.of[0]->tip, "mare") == 0);
        1:  115-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  115-block  1
call    2 never executed
       1*:  116:    assert(lista.of[0]->pret == 1450);
        1:  116-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  116-block  1
call    2 never executed
        1:  117:    stergere(&lista, 0);
        1:  117-block  0
call    0 returned 1
       1*:  118:    assert(strcmp(lista.of[0]->tip, "munte") == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  118-block  0
call    2 never executed
       1*:  119:    assert(lista.of[0]->pret == 123);
        1:  119-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  119-block  1
call    2 never executed
        1:  120:    distrugeLista(&lista);
        1:  120-block  0
call    0 returned 1
        1:  121:}
        -:  122:
function testModifica called 1 returned 100% blocks executed 70%
        1:  123:void testModifica()
        -:  124:{
        1:  125:    ListaMea lista = creareLista();
        1:  125-block  0
call    0 returned 1
       1*:  126:    assert(lungime(&lista) == 0);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  126-block  0
call    3 never executed
        1:  127:    adaugaSf(&lista, creareOferta("munte", "alba", "2021/01/01", 123));
        1:  127-block  0
call    0 returned 1
call    1 returned 1
        1:  128:    adaugaSf(&lista, creareOferta("mare", "cluj", "2023/01/01", 1500));
call    0 returned 1
call    1 returned 1
       1*:  129:    assert(lista.of[1]->pret == 1500);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  129-block  0
call    2 never executed
       1*:  130:    assert(strcmp(lista.of[1]->tip, "mare") == 0);
        1:  130-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  130-block  1
call    2 never executed
       1*:  131:    assert(strcmp(lista.of[1]->destinatie, "cluj") == 0);
        1:  131-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  131-block  1
call    2 never executed
        1:  132:    modificare(&lista, 1, "city break", "Botosani", "2023/10/10", 1000);
        1:  132-block  0
call    0 returned 1
       1*:  133:    assert(strcmp(lista.of[1]->tip, "city break") == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  133-block  0
call    2 never executed
       1*:  134:    assert(lista.of[1]->pret == 1000);
        1:  134-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  134-block  1
call    2 never executed
       1*:  135:    assert(strcmp(lista.of[1]->destinatie, "Botosani") == 0);
        1:  135-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  135-block  1
call    2 never executed
        1:  136:    distrugeLista(&lista);
        1:  136-block  0
call    0 returned 1
        1:  137:}
        -:  138:
function testOrdoneaza_pret called 1 returned 100% blocks executed 65%
        1:  139:void testOrdoneaza_pret()
        -:  140:{
        1:  141:    ListaMea lista = creareLista();
        1:  141-block  0
call    0 returned 1
       1*:  142:    assert(lungime(&lista) == 0);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  142-block  0
call    3 never executed
        1:  143:    adaugaSf(&lista, creareOferta("munte", "alba", "2021/01/01", 123));
        1:  143-block  0
call    0 returned 1
call    1 returned 1
        1:  144:    adaugaSf(&lista, creareOferta("mare", "cluj", "2023/01/01", 1500));
call    0 returned 1
call    1 returned 1
       1*:  145:    assert(lista.of[0]->pret == 123);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  145-block  0
call    2 never executed
       1*:  146:    assert(strcmp(lista.of[0]->tip, "munte") == 0);
        1:  146-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  146-block  1
call    2 never executed
       1*:  147:    assert(lista.of[1]->pret == 1500);
        1:  147-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  147-block  1
call    2 never executed
       1*:  148:    assert(strcmp(lista.of[1]->tip, "mare") == 0);
        1:  148-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  148-block  1
call    2 never executed
        1:  149:    ordoneaza_pret(&lista, "d");
        1:  149-block  0
call    0 returned 1
       1*:  150:    assert(lista.of[0]->pret == 1500);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  150-block  0
call    2 never executed
       1*:  151:    assert(strcmp(lista.of[0]->tip, "mare") == 0);
        1:  151-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  151-block  1
call    2 never executed
       1*:  152:    assert(lista.of[1]->pret == 123);
        1:  152-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  152-block  1
call    2 never executed
       1*:  153:    assert(strcmp(lista.of[1]->tip, "munte") == 0);
        1:  153-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  153-block  1
call    2 never executed
        1:  154:    adaugaSf(&lista, creareOferta("city break", "cluj", "2023/01/01", 500));
        1:  154-block  0
call    0 returned 1
call    1 returned 1
        1:  155:    ordoneaza_pret(&lista, "c");
call    0 returned 1
       1*:  156:    assert(lista.of[0]->pret == 123);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  156-block  0
call    2 never executed
       1*:  157:    assert(strcmp(lista.of[0]->tip, "munte") == 0);
        1:  157-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  157-block  1
call    2 never executed
       1*:  158:    assert(lista.of[1]->pret == 500);
        1:  158-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  158-block  1
call    2 never executed
       1*:  159:    assert(strcmp(lista.of[1]->tip, "city break") == 0);
        1:  159-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  159-block  1
call    2 never executed
       1*:  160:    assert(lista.of[2]->pret == 1500);
        1:  160-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  160-block  1
call    2 never executed
        1:  161:    distrugeLista(&lista);
        1:  161-block  0
call    0 returned 1
        1:  162:}
        -:  163:
function testOrdoneaza_destinatie called 1 returned 100% blocks executed 65%
        1:  164:void testOrdoneaza_destinatie()
        -:  165:{
        1:  166:    ListaMea lista = creareLista();
        1:  166-block  0
call    0 returned 1
       1*:  167:    assert(lungime(&lista) == 0);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  167-block  0
call    3 never executed
        1:  168:    adaugaSf(&lista, creareOferta("munte", "alba", "2021/01/01", 123));
        1:  168-block  0
call    0 returned 1
call    1 returned 1
        1:  169:    adaugaSf(&lista, creareOferta("mare", "cluj", "2023/01/01", 1500));
call    0 returned 1
call    1 returned 1
       1*:  170:    assert(lista.of[0]->pret == 123);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  170-block  0
call    2 never executed
       1*:  171:    assert(strcmp(lista.of[0]->destinatie, "alba") == 0);
        1:  171-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  171-block  1
call    2 never executed
       1*:  172:    assert(lista.of[1]->pret == 1500);
        1:  172-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  172-block  1
call    2 never executed
       1*:  173:    assert(strcmp(lista.of[1]->destinatie, "cluj") == 0);
        1:  173-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  173-block  1
call    2 never executed
        1:  174:    ordoneaza_destinatie(&lista, "d");
        1:  174-block  0
call    0 returned 1
       1*:  175:    assert(lista.of[0]->pret == 1500);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  175-block  0
call    2 never executed
       1*:  176:    assert(strcmp(lista.of[0]->destinatie, "cluj") == 0);
        1:  176-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  176-block  1
call    2 never executed
       1*:  177:    assert(lista.of[1]->pret == 123);
        1:  177-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  177-block  1
call    2 never executed
        -:  178:
        1:  179:    adaugaSf(&lista, creareOferta("munte", "botosani", "2021/01/01", 1234));
        1:  179-block  0
call    0 returned 1
call    1 returned 1
        1:  180:    ordoneaza_destinatie(&lista, "c");
call    0 returned 1
       1*:  181:    assert(lista.of[0]->pret == 123);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  181-block  0
call    2 never executed
       1*:  182:    assert(strcmp(lista.of[0]->destinatie, "alba") == 0);
        1:  182-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  182-block  1
call    2 never executed
       1*:  183:    assert(lista.of[1]->pret == 1234);
        1:  183-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  183-block  1
call    2 never executed
       1*:  184:    assert(strcmp(lista.of[1]->destinatie, "botosani") == 0);
        1:  184-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  184-block  1
call    2 never executed
       1*:  185:    assert(lista.of[2]->pret == 1500);
        1:  185-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  185-block  1
call    2 never executed
       1*:  186:    assert(strcmp(lista.of[2]->destinatie, "cluj") == 0);
        1:  186-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  186-block  1
call    2 never executed
        1:  187:    distrugeLista(&lista);
        1:  187-block  0
call    0 returned 1
        -:  188:
        1:  189:}
        -:  190:
function testFiltreaza_tip_dest called 1 returned 100% blocks executed 76%
        1:  191:void testFiltreaza_tip_dest()
        -:  192:{
        1:  193:    ListaMea lista = creareLista();
        1:  193-block  0
call    0 returned 1
       1*:  194:    assert(lungime(&lista) == 0);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  194-block  0
call    3 never executed
        1:  195:    adaugaSf(&lista, creareOferta("mare", "alba", "2021/01/01", 123));
        1:  195-block  0
call    0 returned 1
call    1 returned 1
        1:  196:    adaugaSf(&lista, creareOferta("mare", "cluj", "2023/01/01", 1500));
call    0 returned 1
call    1 returned 1
        1:  197:    adaugaSf(&lista, creareOferta("munte", "cluj", "2023/01/01", 1500));
call    0 returned 1
call    1 returned 1
       1*:  198:    assert(lungime(&lista) == 3);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  198-block  0
call    3 never executed
        1:  199:    ListaMea lista_filtrata = filtreaza_dest_tip(&lista, "t", "mare");
        1:  199-block  0
call    0 returned 1
       1*:  200:    assert(lungime(&lista_filtrata) == 2);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  200-block  0
call    3 never executed
       1*:  201:    assert(strcmp(lista_filtrata.of[0]->destinatie, "alba") == 0);
        1:  201-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  201-block  1
call    2 never executed
        1:  202:    free(lista_filtrata.of);
        1:  203:    ListaMea lista_filtrata2 = filtreaza_dest_tip(&lista, "t", "munte");
        1:  203-block  0
call    0 returned 1
       1*:  204:    assert(lungime(&lista_filtrata2) == 1);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  204-block  0
call    3 never executed
        1:  205:    free(lista_filtrata2.of);
        1:  206:    ListaMea lista_filtrata3 = filtreaza_dest_tip(&lista, "d", "cluj");
        1:  206-block  0
call    0 returned 1
       1*:  207:    assert(lungime(&lista_filtrata3) == 2);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  207-block  0
call    3 never executed
       1*:  208:    assert(strcmp(lista_filtrata3.of[0]->tip, "mare") == 0);
        1:  208-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  208-block  1
call    2 never executed
       1*:  209:    assert(strcmp(lista_filtrata3.of[1]->tip, "munte") == 0);
        1:  209-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  209-block  1
call    2 never executed
        1:  210:    free(lista_filtrata3.of);
        1:  211:    distrugeLista(&lista);
        1:  211-block  0
call    0 returned 1
        -:  212:
        1:  213:}
        -:  214:
        -:  215:
function testFiltreaza_pret called 1 returned 100% blocks executed 79%
        1:  216:void testFiltreaza_pret()
        -:  217:{
        1:  218:    ListaMea lista = creareLista();
        1:  218-block  0
call    0 returned 1
       1*:  219:    assert(lungime(&lista) == 0);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  219-block  0
call    3 never executed
        1:  220:    adaugaSf(&lista, creareOferta("mare", "alba", "2021/01/01", 123));
        1:  220-block  0
call    0 returned 1
call    1 returned 1
        1:  221:    adaugaSf(&lista, creareOferta("mare", "cluj", "2023/01/01", 1500));
call    0 returned 1
call    1 returned 1
        1:  222:    adaugaSf(&lista, creareOferta("munte", "cluj", "2023/01/01", 1500));
call    0 returned 1
call    1 returned 1
        1:  223:    ListaMea lista_filtrata = filtreaza_pret(&lista, 123);
call    0 returned 1
       1*:  224:    assert(lungime(&lista_filtrata) == 1);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  224-block  0
call    3 never executed
        1:  225:    ListaMea lista_filtrata2 = filtreaza_pret(&lista, 1500);
        1:  225-block  0
call    0 returned 1
       1*:  226:    assert(lungime(&lista_filtrata2) == 2);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  226-block  0
call    3 never executed
       1*:  227:    assert(strcmp(lista_filtrata2.of[0]->tip, "mare") == 0);
        1:  227-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  227-block  1
call    2 never executed
       1*:  228:    assert(strcmp(lista_filtrata2.of[1]->tip, "munte") == 0);
        1:  228-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  228-block  1
call    2 never executed
        1:  229:    distrugeLista(&lista);
        1:  229-block  0
call    0 returned 1
        1:  230:    free(lista_filtrata.of);
        1:  231:    free(lista_filtrata2.of);
        1:  232:}
