%Predicat diff(L1:lista, L2:lista, Rez:lista)
%L1 lista dat de utilizator
%L2 lista data de utilizator
%Rez lista rezultata dupa L1-L2
%model de flux - (i, i, o), (i, i, i)

diff([], _, []).
diff([H|T], Set, Result) :-
	memberx(H, Set),
	!,
	diff(T, Set, Result).
diff([H|T], Set, [H|Result]):- diff(T, Set, Result).


% memberx(X:intreg, L:lista)
% X -numarul pe care il cautam in lista
% L lista in care cautam
% modele de flux - (i, i)
memberx(X, [X|_]).
memberx(X, [_|T]):- memberx(X, T).

test_all2():-
	assertion(memberx(1, [1, 2, 3])),
	assertion(not(memberx(1, [2,3,4,5]))),
	assertion(memberx(2, [0,1, 2, 3, 4])),
	assertion(diff([1, 2, 3, 4, 5], [1, 2, 3], [4, 5]),
	assertion(diff([1, 2, 3, 4], [5, 6, 7], [1, 2, 3, 4])),
	assertion(diff([], [1, 2, 3], [])).
